{# =========================================================
   Shared Macro: Conversion Table (Markdown)
   ========================================================= #}
{% macro conversion_table(input_bits, output_bits, steps, mode="bin2gray") %}

{% if mode == "bin2gray" %}
**Binary → Gray Conversion**
{% else %}
**Gray → Binary Conversion**
{% endif %}
{% set table = [] %}

{# Header row: Binary or Gray + input bits #}
{% set _ = table.append([( "Binary" if mode == "bin2gray" else "Gray" )] + input_bits|list) %}

{# Arrows row #}
{% set arrows = ["Arrows"] %}
{% for i in range(input_bits|length) %}
    {% if i == 0 %}
        {% set _ = arrows.append("↓") %}
    {% else %}
        {% if mode == "bin2gray" %}
            {% set _ = arrows.append("↘ ⊕ ↓") %}
        {% else %}
            {% set _ = arrows.append("↗ ⊕ ↓") %}
        {% endif %}
    {% endif %}
{% endfor %}
{% set _ = table.append(arrows) %}

{# Output row: Gray or Binary + output bits #}
{% set output_label = "Gray" if mode == "bin2gray" else "Binary" %}
{% set _ = table.append([output_label] +  output_bits|list) %}

{# Steps row #}
{% set _ = table.append(["Steps"] + steps) %}

{{ table|tabulate(tablefmt="github") }}

{% endmacro %}


{# =========================================================
   Illustrate bit changes
   ========================================================= #}
{% macro illustrate_bit_change(x, x_next) %}
### Binary Increment Illustration

**x:** `{{ x|join }}` → **x+1:** `{{ x_next|join }}`  

{% set table = [] %}

{# Header row: Position indices #}
{% set _ = table.append(["Position"] + range(x|length)|list) %}

{# Row for x #}
{% set _ = table.append(["x"] + x|list) %}

{# Row for x+1, highlighting changed bits #}
{% set row_next = ["x+1"] %}
{% for i in range(x|length) %}
    {% if x[i] != x_next[i] %}
        {% set _ = row_next.append("**" ~ x_next[i] ~ "**") %}
    {% else %}
        {% set _ = row_next.append(x_next[i]) %}
    {% endif %}
{% endfor %}
{% set _ = table.append(row_next) %}

{{ table|tabulate(tablefmt="github") }}

*Highlighted cell(s) = changed bit(s)*  
{% endmacro %}


{% macro illustrate_gray_sequence(gray_codes, x_name="x") %}
### Gray Code Sequence (Bit Changes)
{% set table = [] %}

{# Header row: Step and bit labels #}
{# Build header row separately #}
{% set header = ["Step"] %}
{% for j in range(gray_codes[0]|length) %}
    {% set _ = header.append("Bit " ~ j) %}
{% endfor %}

{# Add header row to the table #}
{% set _ = table.append(header) %}

{# Rows for each Gray code value #}
{% for i in range(gray_codes|length) %}
    {% set row = [x_name ~ " + " ~ i] %}
    {% for j in range(gray_codes[i]|length) %}
        {% if i > 0 and gray_codes[i][j] != gray_codes[i-1][j] %}
            {% set _ = row.append("**" ~ gray_codes[i][j] ~ "**") %}
        {% else %}
            {% set _ = row.append(gray_codes[i][j]) %}
        {% endif %}
    {% endfor %}
    {% set _ = table.append(row) %}
{% endfor %}

{{ table|tabulate(tablefmt="github") }}



*Highlighted cell shows the bit that flipped compared to the previous Gray code.*  
{% endmacro %}


{# =========================================================
   Main Template: Binary <-> Gray Exercises
   ========================================================= #}
{% if RENDER_MODE == "question" %}

### Convert the following number from Binary to Gray:
**حوّل من الثنائي إلى ترميز غراي**  
`{{ number_bin|join }}`  

---

### Convert the following number from Gray to Binary:
**حوّل من ترميز غراي إلى الثنائي**  
`{{ number_gray|join }}`  

{% elif RENDER_MODE == "answer" %}

### Binary → Gray Conversion
{{ conversion_table(number_bin, number_gray, steps_bin2gray, mode="bin2gray") }}

### Gray → Binary Conversion
{{ conversion_table(number_gray, number_bin, steps_gray2bin, mode="gray2bin") }}

### Illustration of Bit Change (Next Gray Code)
{{ illustrate_bit_change(gray_sequence[0], gray_sequence[1]) }}

### Gray Code Sequence
{{ illustrate_gray_sequence(gray_sequence, "x") }}

{% endif %}
