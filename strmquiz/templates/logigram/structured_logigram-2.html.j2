{% set functions = logicdiagramdict.functions %}
{% set lg = logicdiagramdict %}
{% macro big_or_gate(W=60, H=120, inputs=0, xpos=0, ypos=0) %}
  <g id="or-gateX">
    <!-- OR gate body -->
    <path d="M{{ W*0.2 }},0
             Q40,{{ H/2 }} {{ W*0.2 }},{{ H }}
             Q{{ W*0.7 }},{{ H }} {{ W }},{{ H/2 }}
             Q{{ W*0.7 }},0 {{ W*0.2 }},0 Z"
          fill="white" stroke="black"/>
    <!-- Inputs -->
    {% if inputs > 0 %}
      {% for k in range(inputs) %}
        <line x1="-20"
              y1="{{ (k+1) * H // (inputs+1) }}"
              x2="0"
              y2="{{ (k+1) * H // (inputs+1) }}"
              stroke="black"/>
      {% endfor %}
    {% endif %}
    <!-- Output -->
    <line x1="{{ W }}" y1="{{ H/2 }}" x2="{{ W+20 }}" y2="{{ H/2 }}" stroke="black"/>
  </g>
{% endmacro %}
<svg xmlns="http://www.w3.org/2000/svg" width="900" height="900" viewBox="0 0 900 180" preserveAspectRatio="xMinYMin meet">
  <style>
    .wire { stroke: #222; stroke-width: 2; fill: none; }
    .gate { stroke: #222; stroke-width: 2; fill: white; }
    .not-bubble { stroke: #222; stroke-width: 2; fill: white; }
    .label { font-family: "DejaVu Sans", "Arial", sans-serif; font-size:14px; text-anchor: middle; }
    .var-name { font-weight: bold; }
  </style>
  {% set gate_space = 50 %}  <!-- Define space between gates -->
  {% set var_space = 60 %}   <!-- Define space between vars -->
  {% set var_gate_size = 40 %}   <!-- Define space between gates vars -->
  {% set step = 10 %}   <!-- Define step offset lines entred into a function gate -->
  {% set table_var_xpos = {"A":-270, "B":-210, "C":-150, "D":-90} %}   <!-- Define space between vars -->
>
  <!-- Define NOT gate as reusable symbol -->
  <defs>
    <g id="not-gate">
      <!-- Triangle -->
      <polygon points="0,0 20,10 0,20" stroke="black" fill="none"/>
      <!-- Circle (inversion bubble) -->
      <circle cx="25" cy="10" r="5" stroke="black" fill="none"/>
      <!-- Input wire -->
      <line x1="-5" y1="10" x2="0" y2="10" stroke="black"/>
      <!-- Output wire -->
      <line x1="30" y1="10" x2="35" y2="10" stroke="red"/>
    </g>



 <!-- Define OR gate as reusable symbol -->
    <g id="or-gate">
      <!-- OR gate body (shorter) -->
      <path d="M0,0
               Q8,20 0,40
               Q20,40 40,20
               Q20,0 0,0
               Z"
            stroke="black" fill="none"/>

      <!-- Input wires -->
        <line x1="-20" y1="5" x2="0" y2="5" stroke="black"/>
        <line x1="-20" y1="15" x2="0" y2="15" stroke="black"/>
        <line x1="-20" y1="25" x2="0" y2="25" stroke="black"/>
        <line x1="-20" y1="35" x2="0" y2="35" stroke="black"/>

      <!-- Output wire -->
      <line x1="40" y1="20" x2="70" y2="20" stroke="red"/>
    </g>



<!-- Define BIG OR gate as reusable symbol -->
    <g id="big-or-gate3">
      <!-- OR gate body (shorter) -->
      <!-- OR gate body -->
      <path d="M0,0
               Q40,60 0,125
               Q100,125 125,60
               Q100,0 0,0"
            stroke="black" fill="none"/>
      <!-- Output wire -->
      <line x1="250" y1="120" x2="300" y2="120" stroke="red"/>
    </g>
        <g id="big-or-gate2">
      <!-- OR gate body (shorter) -->
      <!-- OR gate body -->
     <path d="M0,0
               Q40,40 0,80
               Q80,80 80,40
               Q80,0 0,0"
            stroke="black" fill="none"/>
      <!-- Output wire -->
      <line x1="80" y1="40" x2="100" y2="40" stroke="red"/>
    </g>

    <!-- Define AND gate as reusable symbol -->

      <g id="and-gate4">
        <!-- Left side (flat) -->
        <line x1="0" y1="0" x2="0" y2="40" stroke="black"/>
        <!-- Top arc -->
        <path d="M0,0 H20 A20,20 0 0,1 20,40 H0" stroke="black" fill="none"/>
        <!-- Input wires -->
        <line x1="-20" y1="5" x2="0" y2="5" stroke="black"/>
        <line x1="-20" y1="15" x2="0" y2="15" stroke="black"/>
        <line x1="-20" y1="25" x2="0" y2="25" stroke="black"/>
        <line x1="-20" y1="35" x2="0" y2="35" stroke="black"/>
        <!-- Output wire -->
        <line x1="40" y1="20" x2="80" y2="20" stroke="red"/>
      </g>
      <g id="and-gate3">
        <!-- Left side (flat) -->
        <line x1="0" y1="0" x2="0" y2="40" stroke="black"/>
        <!-- Top arc -->
        <path d="M0,0 H20 A20,20 0 0,1 20,40 H0" stroke="black" fill="none"/>
        <!-- Input wires -->
        <line x1="-20" y1="5" x2="0" y2="5" stroke="black"/>
        <line x1="-20" y1="15" x2="0" y2="15" stroke="black"/>
        <line x1="-20" y1="25" x2="0" y2="25" stroke="black"/>
        <!-- Output wire -->
        <line x1="40" y1="20" x2="80" y2="20" stroke="red"/>
      </g>

      <g id="and-gate2">
        <!-- Left side (flat) -->
        <line x1="0" y1="0" x2="0" y2="40" stroke="black"/>
        <!-- Top arc -->
        <path d="M0,0 H20 A20,20 0 0,1 20,40 H0" stroke="black" fill="none"/>
        <!-- Input wires -->
        <line x1="-20" y1="5" x2="0" y2="5" stroke="black"/>
        <line x1="-20" y1="15" x2="0" y2="15" stroke="black"/>
        <!-- Output wire -->
        <line x1="40" y1="20" x2="80" y2="20" stroke="red"/>
      </g>

      <!-- NAND Gate -->
    <g id="nand-gate">
      <!-- AND body -->
      <path d="M0,0 H20 A20,20 0 0,1 20,40 H0 Z"
            stroke="black" fill="none"/>
      <!-- Inputs -->
      <line x1="-20" y1="10" x2="0" y2="10" stroke="black"/>
      <line x1="-20" y1="30" x2="0" y2="30" stroke="black"/>
      <!-- Inversion bubble -->
      <circle cx="40" cy="20" r="5" stroke="black" fill="white"/>
      <!-- Output -->
      <line x1="45" y1="20" x2="70" y2="20" stroke="red"/>
    </g>

    <!-- NOR Gate -->
    <g id="nor-gate">
      <!-- OR body -->
      <path d="M0,0
               Q8,20 0,40
               Q25,40 45,20
               Q25,0 0,0 Z"
            stroke="black" fill="none"/>
      <!-- Inputs -->
      <line x1="-15" y1="10" x2="0" y2="10" stroke="black"/>
      <line x1="-15" y1="30" x2="0" y2="30" stroke="black"/>
      <!-- Inversion bubble -->
      <circle cx="50" cy="20" r="4" stroke="black" fill="white"/>
      <!-- Output -->
      <line x1="54" y1="20" x2="70" y2="20" stroke="red"/>
    </g>

    </defs>

   <!-- Draw variables A, B, C, D with NOT gates -->

  {% for var in lg.variables %}
  {% set i = loop.index0 %}
  <g transform="translate({{i*var_space+20}},30)">
    <!-- {{var}} -->
    <text x="0" y="-5" font-family="serif" font-size="20">{{var}}</text>
    <line x1="10" y1="0" x2="10" y2="{{100+lg.size_terms*50}}" stroke="black"/>
    <line x1="50" y1="10" x2="50" y2="{{100+lg.size_terms*50}}" stroke="red"/>
    <use href="#not-gate" x="15" y="0"/>
  </g>
  {% endfor %}
  {% set ns = namespace(i = 0, counter=0, shift=0) %}

  {% for function in lg.functions %}

      {% set ns.shift = 0 %}
      {% set nb_terms = function.nb_terms %}
      <!-- Draw terms of fucntion -->
      {% for term in function.terms %}
      {% set ns.i = ns.i + 1 %}

      <g transform="translate(300,{{50+ns.i* gate_space}})">
        <!-- Draw the term {{term.label}} -->
        <text x="60" y="15" font-family="serif" font-size="10">{{function.name+":"+term.label}}</text>
        <use href="#and-gate{{ term.vars|length }}" x="15" y="0"/>

        <!-- Extend output line -->

        {% if function.nb_terms > 1 %}
            <line x1="80" y1="20" x2="195" y2="20" stroke="blue"/>
        {% else %}
            <line x1="80" y1="20" x2="280" y2="20" stroke="blue"/>
        {% endif %}



        {% set ns.counter=0 %}
        {%for var in lg.variables  %}
            {% if var+"'" in term.vars %}
                <line x1="{{table_var_xpos[var]+var_gate_size}}" y1="{{5+ns.counter*10}}" x2="0" y2="{{5+ns.counter*10}}" stroke="red"/>
                {% set ns.counter = ns.counter + 1 %}
            {% elif var in term.vars %}
                <line x1="{{table_var_xpos[var]}}" y1="{{5+ns.counter*10}}" x2="0" y2="{{5+ns.counter*10}}" stroke="black"/>
                {% set ns.counter = ns.counter + 1 %}
            {% endif %}
        {% endfor %}
      </g>
      {% endfor %}

        <g transform="translate(470,{{60+(ns.i - function.nb_terms +1)*gate_space}})">
        <!-- {{function.name}} -->
        <text x="60" y="{{(function.nb_terms-1)*gate_space/2}}" font-family="serif" font-size="10">{{function.name}}</text>
      {% if function.nb_terms > 1 %}
        {#
        <use href="#big-or-gate3" x="15" y="0"/>
        #}
        {{big_or_gate(60, (function.nb_terms)*gate_space-20, 0, 100,0) }}


      {% endif %}
        </g>
  {% endfor %}




</svg>

