{% set functions = logicdiagramdict.functions %}
{% set lg = logicdiagramdict %}
  {% set gate_space = 50 %}  <!-- Define space between gates -->
  {% set var_space = 60 %}   <!-- Define space between vars -->
  {% set var_gate_size = 40 %}   <!-- Define space between gates vars -->
  {% set step = 10 %}   <!-- Define step offset lines entred into a function gate -->
  {% set table_var_xpos = {lg.variables["A"]:-270, lg.variables["B"]:-210, lg.variables["C"]:-150, lg.variables["D"]:-90} %}   <!-- Define space between vars -->

{% macro big_or_gate(W=60, H=120, inputs=0, xpos=0, ypos=0) %}
  <g id="or-gateX">
    <!-- OR gate body -->
    <path d="M{{ W*0.2 }},0
             Q40,{{ H/2 }} {{ W*0.2 }},{{ H }}
             Q{{ W*0.7 }},{{ H }} {{ W }},{{ H/2 }}
             Q{{ W*0.7 }},0 {{ W*0.2 }},0 Z"
          fill="white" stroke="black"/>
    <!-- Inputs -->
    {% if inputs > 0 %}
      {% for k in range(inputs) %}
        <line x1="-20"
              y1="{{ (k+1) * H // (inputs+1) }}"
              x2="0"
              y2="{{ (k+1) * H // (inputs+1) }}"
              stroke="black"/>

      {% endfor %}
    {% endif %}
    <!-- Output -->
    <line x1="{{ W }}" y1="{{ H/2 }}" x2="{{ W+20 }}" y2="{{ H/2 }}" stroke="black"/>
  </g>
{% endmacro %}

{% macro draw_wires(N=4, step=10, gate_space=50) %}
  <g id="wires">
    <!-- wires from AND to OR -->
    {% for k in range(N) %}
        {% set shift = 0 if (N % 2 == 1 and k == N // 2) else ([k, N - 1 - k]|min) %}
        {% set gate_size = 40 %}
        {% set margin = 5 %}
        {% set wire_space = (gate_size -2*margin)/(N-1)  %}
        {#% set wire_space = 10  %#}
        {% set xpos = -step*shift-5 %}
        {% set y1pos = margin + wire_space*k %}
        {% set y2pos = -5-((N-1)/2-shift)*gate_space+25 if (k < N // 2) else -5+((N-1)/2-shift)*gate_space+25 %}
    <!-- vertical wire -->
      {% if not (N % 2 == 1 and k == N // 2) %}
        <line x1="{{xpos}}" y1="{{y1pos}}" x2="{{xpos}}" y2="{{y2pos}}" stroke="green"/>
        <!-- horizental wire -->
        <line x1="{{xpos}}" y1="{{y1pos}}" x2="20" y2="{{y1pos}}" stroke="red"/>
        {% endif %}
       {#
        <text x="{{xpos}}" y="{{5+10*k}}"  font-family="serif" font-size="8">x={{xpos}} y={{y1pos}}</text>
        <text x="{{xpos-20}}" y="{{y1pos}}"  font-family="serif" font-size="8">x={{xpos}} y2={{y2pos}}</text>

        <text x="{{xpos-40}}" y="{{y1pos}}"  font-family="serif" font-size="6">shift= {{shift}} k={{k}} x={{xpos}} y2={{y2pos}}</text>
        #}

      {% endfor %}
  </g>
{% endmacro %}
<svg xmlns="http://www.w3.org/2000/svg" width="900" height="{{gate_space * (lg.size_terms+3)}}" viewBox="0 0 900 180" preserveAspectRatio="xMinYMin meet">
  <style>
    .wire { stroke: #222; stroke-width: 2; fill: none; }
    .gate { stroke: #222; stroke-width: 2; fill: white; }
    .not-bubble { stroke: #222; stroke-width: 2; fill: white; }
    .label { font-family: "DejaVu Sans", "Arial", sans-serif; font-size:14px; text-anchor: middle; }
    .var-name { font-weight: bold; }
  </style>
{% include "logigram/gates.html" %}


   <!-- Draw variables A, B, C, D with NOT gates -->

  {% for var in lg.variables.values() %}
  {% set i = loop.index0 %}
  <g transform="translate({{i*var_space+20}},30)">
    <!-- {{var}} -->
    <text x="0" y="-5" font-family="serif" font-size="20">{{var}}</text>
    <line x1="10" y1="0" x2="10" y2="{{100+lg.size_terms*50}}" stroke="black"/>
    <line x1="50" y1="10" x2="50" y2="{{100+lg.size_terms*50}}" stroke="red"/>
        {% if lg.method.upper() == "NAND" %}
            <use href="#nand-gate-not" x="40" y="0" transform="scale(0.5)"/>
        {% elif lg.method.upper() == "NOR" %}
            <use href="#nor-gate-not" x="40" y="0"  transform="scale(0.5)"/>
        {% else %}
             <use href="#not-gate" x="15" y="0"/>
        {% endif %}

  </g>
  {% endfor %}
  {% set ns = namespace(i = 0, counter=0, shift=0) %}

  {% for function in lg.functions %}

      {% set ns.shift = 0 %}
      {% set nb_terms = function.nb_terms %}

      <!-- Draw terms of fucntion -->

      {% for term in function.terms %}
      {% set ns.i = ns.i + 1 %}

      <g transform="translate(300,{{50+ns.i* gate_space}})">
        <!-- Draw the term {{term.label}} -->
        <text x="60" y="15" font-family="serif" font-size="10">{{function.name+"  :  "+term.label.default}}</text>

        {% if lg.method.upper() == "NAND" %}
            <use href="#nand-gate{{ term.vars|length }}" x="15" y="0"/>
        {% elif lg.method.upper() == "NOR" %}
            <use href="#nor-gate{{ term.vars|length }}" x="15" y="0"/>
        {% elif lg.method.upper() == "POS" %}
            <use href="#or-gate{{ term.vars|length }}" x="15" y="0"/>
        {% else %}
             <use href="#and-gate{{ term.vars|length }}" x="15" y="0"/>
        {% endif %}

        <!-- Extend output line -->
        {% set offset = -2.5 if (nb_terms % 2 == 1 and loop.index0 == nb_terms // 2) else ([loop.index0, nb_terms - 1 - loop.index0]|min) %}
        {% if function.nb_terms > 1 %}
                <line x1="80" y1="20" x2="{{195-offset*step}}" y2="20" stroke="blue"/>
        {% else %}
            <line x1="80" y1="20" x2="280" y2="20" stroke="blue"/>
        {% endif %}

      <!-- Draw vars of term  -->

        {% set ns.counter=0 %}

        {%for var in lg.variables.values()  %}
            {% set ypos = 5+ns.counter*10 if (term.vars|length)>1 else 20 %}
            {% if var+"'" in term.vars %}
                <line x1="{{table_var_xpos[var]+var_gate_size}}" y1="{{ypos}}" x2="0" y2="{{ypos}}" stroke="red"/>
                {% set ns.counter = ns.counter + 1 %}
            {% elif var in term.vars %}
                <line x1="{{table_var_xpos[var]}}" y1="{{ypos}}" x2="0" y2="{{ypos}}" stroke="black"/>
                {% set ns.counter = ns.counter + 1 %}
            {% endif %}
        {% endfor %}
      </g>
      {% endfor %}

        <g transform="translate(500,{{50+(ns.i - (function.nb_terms-1)/2)*gate_space}})">
        <!-- {{function.name}} -->
        <text x="60" y="15" font-family="serif" font-size="10">{{function.name}}</text>
      {% if function.nb_terms > 1 %}
        {{ draw_wires(N=function.nb_terms, step=10, gate_space=50) }}
        {% if lg.method.upper() == "NAND" %}
            <use href="#nand-gate0" x="15" y="0"/>
        {% elif lg.method.upper() == "NOR" %}
            <use href="#nor-gate0" x="15" y="0"/>
        {% elif lg.method.upper() == "POS" %}
            <use href="#and-gate0" x="15" y="0"/>
        {% else %}
            <use href="#or-gate0" x="15" y="0"/>
        {% endif %}


      {% endif %}
        </g>
  {% endfor %}


</svg>

