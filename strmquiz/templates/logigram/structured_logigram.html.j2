{% set functions = logicdiagramdict.functions %}
{% set lg = logicdiagramdict %}
  {% set gate_space = 50 %}  <!-- Define space between gates -->
  {% set var_space = 50 %}   <!-- Define space between vars -->
  {% set var_gate_size = 25 %}   <!-- Define space between gates vars -->
  {% set step = 10 %}   <!-- Define step offset lines entred into a function gate -->
  {% set table_var_xpos = {lg.variables["A"]:-270, lg.variables["B"]:-210, lg.variables["C"]:-150, lg.variables["D"]:-90} %}   <!-- Define space between vars -->
  {% set table_var_xpos = {lg.variables["A"]:-220, lg.variables["B"]:-170, lg.variables["C"]:-120, lg.variables["D"]:-70} %}   <!-- Define space between vars -->

{% if lg.method.upper() == "NAND" %}
    {% set function_gate = "nand" %}
    {% set term_gate = "nand" %}
    {% set not_gate = "nand-not" %}
{% elif lg.method.upper() == "NOR" %}
    {% set function_gate = "nor" %}
    {% set term_gate = "nor" %}
    {% set not_gate = "nor-not" %}
{% elif lg.method.upper() == "POS" %}
    {% set function_gate = "and" %}
    {% set term_gate = "or" %}
    {% set not_gate = "not" %}
{% else %}
    {% set function_gate = "or" %}
    {% set term_gate = "and" %}
    {% set not_gate = "not" %}
{% endif %}



<svg xmlns="http://www.w3.org/2000/svg" width="900" height="{{gate_space * (lg.size_terms+3)}}" viewBox="0 0 900 180" preserveAspectRatio="xMinYMin meet">
  <style>
    .wire { stroke: #222; stroke-width: 2; fill: none; }
    .gate { stroke: #222; stroke-width: 2; fill: white; }
    .not-bubble { stroke: #222; stroke-width: 2; fill: white; }
    .label { font-family: "DejaVu Sans", "Arial", sans-serif; font-size:14px; text-anchor: middle; }
    .var-name { font-weight: bold; }
  </style>
{% include "logigram/gates.html" %}
{% import "logigram/gates2.html.j2" as mygates %}


   <!-- Draw variables A, B, C, D with NOT gates -->

  {% for var in lg.variables.values() %}
  {% set i = loop.index0 %}
  <g transform="translate({{i*var_space+20}},30)">
    <!-- {{var}} -->
    <text x="0" y="-5" font-family="serif" font-size="20">{{var}}</text>
    <line x1="10" y1="0" x2="10" y2="{{100+lg.size_terms*50}}" stroke="black"/>
    <line x1="{{var_space/2+10}}" y1="10" x2="{{var_space/2+10}}" y2="{{100+lg.size_terms*50}}" stroke="red"/>
        {% if lg.method.upper() in ("NAND","NOR") %}
        {#<use href="#{{not_gate}}-gate-not" x="40" y="0" transform="scale(0.5)"/>#}
        <g transform="translate(13,5)"> {{ mygates.gate(not_gate, 2, W=16,H=12) }}</g>
        {% else %}
       {# <use href="#not-gate" x="15" y="0"/>#}
        <g transform="translate(15,5)"> {{ mygates.gate(not_gate, 1, W=15,H=10) }}</g>
        {% endif %}

  </g>
  {% endfor %}
  {% set ns = namespace(i = 0, counter=0, shift=0) %}

  {% for function in lg.functions %}

      {% set ns.shift = 0 %}
      {% set nb_terms = function.nb_terms %}

      <!-- Draw terms of fucntion -->

      {% for term in function.terms %}
      {% set ns.i = ns.i + 1 %}

      <g transform="translate({{var_space*5}},{{50+ns.i* gate_space}})">
        <!-- Draw the term {{term.label}} -->
        <text x="60" y="15" font-family="serif" font-size="10">{{function.name+"  :  "+term.label.default}}</text>
        {# <use href="#{{term_gate}}-gate{{ term.vars|length }}" x="15" y="0"/>#}
        <g transform="translate(15,0)"> {{ mygates.gate(term_gate, term.vars|length) }}</g>

        <!-- Extend output line -->
        {% set offset = -2.5 if (nb_terms % 2 == 1 and loop.index0 == nb_terms // 2) else ([loop.index0, nb_terms - 1 - loop.index0]|min) %}
        {% if function.nb_terms > 1 %}
                <line x1="80" y1="20" x2="{{195-offset*step}}" y2="20" stroke="blue"/>
        {% else %}
            <line x1="80" y1="20" x2="280" y2="20" stroke="blue"/>
        {% endif %}

      <!-- Draw vars of term  -->

        {% set ns.counter=0 %}

        {%for var in lg.variables.values()  %}
            {% set ypos = 5+ns.counter*10 if (term.vars|length)>1 else 20 %}
            {% if var+"'" in term.vars %}
                <line x1="{{table_var_xpos[var]+var_gate_size}}" y1="{{ypos}}" x2="0" y2="{{ypos}}" stroke="red"/>
                {% set ns.counter = ns.counter + 1 %}
            {% elif var in term.vars %}
                <line x1="{{table_var_xpos[var]}}" y1="{{ypos}}" x2="0" y2="{{ypos}}" stroke="black"/>
                {% set ns.counter = ns.counter + 1 %}
            {% endif %}
        {% endfor %}
      </g>
      {% endfor %}

        <g transform="translate({{var_space*5+200}},{{50+(ns.i - (function.nb_terms-1)/2)*gate_space}})">
        <!-- {{function.name}} -->
        <text x="60" y="15" font-family="serif" font-size="10">{{function.name}}</text>
      {% if function.nb_terms > 1 %}
        {{ mygates.draw_wires(N=function.nb_terms, step=10, gate_space=50) }}
        {#<use href="#{{function_gate}}-gate0" x="15" y="0"/>#}
        <g transform="translate(15,0)"> {{ mygates.gate(function_gate, 0) }}</g>


      {% endif %}
        </g>
  {% endfor %}


</svg>
{% include "logigram/gates2.html.j2" %}

