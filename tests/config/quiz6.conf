[DEFAULT]
# List of stemmers to test
# Defalut
#// default configuration of available tests
[QUIZES]
quizes = ["test0", "test1", "test2", "test3", "test4", "test5","test6", "test7","bankquestion", "test8", "test9"]
commands =["float", 
 "intervalle",
 "complement",
 "exp",            
 "map",
 "map-sop",
 "function",
 "base",
 "arithm",
 "mesure",
 "static_funct",
 "multi_funct"]
[Tests]
# test0=[["flip"]]
# test0=[["register"]]
# test0=[["unicode", "ascii"]]
# test0=[["gray"]]
# test0=[["float"]]
test0=[["chronogram"]]
test1=[["base", "intervalle", "arithm"],
 ["mesure", "base", "arithm"],
 ["base", "mesures", "arithm"],]
test2=[["float", "map"],
        ["float", "map-sop"],
        ["float", "function"],
        ["complement","complement", "map"],
        ["function", "exp"],
        ["function", "exp"],]
test3=[["function", "exp"],]
test4=[["static_funct"]]
test5=[["multi_funct",],]
test6=[["exp","chronogram",],]
test7=[["nand_funct","nor_funct"]]
test8=[["chronogram"],["flip"],["counter"],["register"],["seq_misc"]]
test9=[['float'], ['intervalle'], ['complement'], ['exp'], ['map'], ['map-sop'], ['function'], ['base'], ['arithm'],
    ['mesure'], ['static_funct'], ['multi_funct'], ["ascii"],["bcdx3"],["gray"],["chronogram"],["flip"],["counter"],["register"]]
bankquestion=[['float'], ['intervalle'],
 ['complement'], ['exp'], ['map'],
 ['map-sop'], ['function'], ['base'], ['arithm'], ['mesure'], 
 ['nand_funct'], ['nor_funct'], ]
[Args]
repeat=1
size=1
random=False
text="Salam Alykomu?"
#vars=["A","B","C","D"]
vars=["X","Y","Z","W"]
#vars=["X0","Y0","Z0","W0"]
# a problem in renamign vars, with nand or and
method="nand"
simplification="sop"
# Counts
outputs=["Fx0","F0","F1","F2","F3"]
minterms=[[15,14,12,1,3],[3,5,6,7,9,10,11,12,13,14],[1,2,4,7,8,11,13,14],[0,1,2,3,4,5,6,7,11,12],[0,1,2,3,4,5,6,7]]

# Prime factors
#outputs=["F2","F3","F5", "F7", "F11", "F13"]
#minterms=[[2,4,6,8,10,12,14],[2,3,6,7,9,10,11,12,14,15],[0,2,5,8,10,15],[7,14],[11],[1,3,4,6,9,11,12,14]]

# Shift code
#minterms=[[5,7,13,15],[3,7,8,10,11,12,14,15],[1,3,4,5,6,7,9,11,12,13,14,15],[2,6,9,10,11,13,14,15]]
dontcare=[[],[],[],[],[],[]]

## Sequentiel configuration
# varlist={"U":0, "V":0, "Q":0, "Q'":0}
# varlist={"J":0, "K":-1, "Q":-1, "Q0":-1, "Q0'":1, "Q1":-1}
varlist={"J":0, "K":-1, "D":-1, "Q":-1, "Q0":-1, "Q0'":1, "Q1":-1}
length=24
# flip_type="UV"
# flip_type="JK"
flip_type="D"
synch_type="rising"
# synch_type="high"
# synch_type="low"
# synch_type="falling"
# synch_type="rising"
output=["Q", "Q0", "Q0'", "Q1"]
register_type="shift-right"
# register_type="shift-left"
register_random=True
register_nbits=4
register_flips=["JK","D","JK","JK"]
# counter_type="down"
counter_type="up"
counter_random=False
counter_nbits=6
counter_flips=["JK","JK","JK","JK","JK","JK"]
# additional args
functions_number=4
sop_question="a+b'.c"
float=12.25,
interval_nbits=16
complement_number=-125
arithm_numbers=[120, 50]
arihtm_operation='+'
bases=[7,12]
base_numbers=[122, 115]
bcdx3_numbers=[123, 199]
gray_number=35
gray_sequence=6
